name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Cache node modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-

    - name: Install Dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm install

    - name: Create .env file
      run: |
        touch .env
        echo "${{ secrets.SECRET_ENV }}" > .env

    - name: Build the Docker image
      run: CI=false npm run build

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build the Docker image
      run: docker build -t ${{secrets.DOCKER_REPO}}/front .

    - name: Tagging
      run: docker tag ${{secrets.DOCKER_REPO}}/front:latest ${{secrets.DOCKER_REPO}}/front:latest

    - name: Push to Docker Hub
      run: docker push ${{secrets.DOCKER_REPO}}/front:latest

    - name: Deploy to server
      uses: fifsky/ssh-action@master
      with:
        command: |
          sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          sudo docker pull ${{secrets.DOCKER_REPO}}/front:latest
          sudo docker-compose -f /home/soloplay/docker-compose.yml up -d
        host: ${{secrets.HOST}}
        user: ${{secrets.USERNAME}}
        key: ${{secrets.KEY}}
